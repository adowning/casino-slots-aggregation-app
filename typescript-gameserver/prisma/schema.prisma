// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
}

model DataLog {
  id        Int      @id @default(autoincrement())
  message   String
  createdAt DateTime @default(now())
}

model GameslistGame {
  id          Int     @id @default(autoincrement())
  gid         String  @unique // Game ID
  slug        String  @unique // Game slug
  name        String?
  providerId  Int     // Foreign key to GameslistProvider
  provider    GameslistProvider @relation(fields: [providerId], references: [id])
  isActive    Boolean  @default(true) // Corresponds to 'active' filter

  // New fields for filtering from ListGameslist.php
  gid_extra   String?
  bonusbuy    Boolean? @default(false)
  jackpot     Boolean? @default(false)

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model GameslistProvider {
  id        Int      @id @default(autoincrement())
  pid       String   @unique // Provider ID, if it's a string and unique like 'redtiger'
  name      String   @unique
  // Add other relevant provider fields here, e.g., description, website, etc.
  games     GameslistGame[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PragmaticPlayTransaction {
  id              Int      @id @default(autoincrement())
  bonusgame_token String?
  player_id       String
  command         String?
  game_id         String

  replayed        Boolean? @default(false)
  active          Boolean? @default(true)
  init_event      Json?
  game_event      Json?

  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  @@map("wainwright_bgaming_bonusgames")
}

model FreeSpins {
  id              Int      @id @default(autoincrement())
  player_id       String
  game_id         String
  operator_key    String

  total_spins     Int?
  remaining_spins Int?
  bet_level       String?
  currency        String?

  active          Boolean  @default(true)

  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // Example of a composite unique key if a player can only have one active free spin offer per game and operator
  // @@unique([player_id, game_id, operator_key, active], name: "active_freespin_offer")
}
